apiVersion: apps/v1
kind: Deployment
metadata:
  name: percona-everest
spec:
  serviceName: everest
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: percona-everest-backend
      app.kubernetes.io/component: everest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: percona-everest-backend
        app.kubernetes.io/component: everest
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: everest
                app.kubernetes.io/name: percona-everest-backend
            topologyKey: kubernetes.io/hostname
      containers:
        - name: everest
          image: percona/percona-everest:dev-latest
          env:
            - name: SECRETS_ROOT_KEY
              valueFrom:
                secretKeyRef:
                  name: everest-secrets-root-key
                  key: secrets-root-key
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 300
            periodSeconds: 15
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 20Mi
---
apiVersion: v1
kind: Service
metadata:
  name: everest
  labels:
    app.kubernetes.io/name: percona-everest-backend
    app.kubernetes.io/component: everest
spec:
  selector:
    app.kubernetes.io/component: everest
    app.kubernetes.io/name: percona-everest-backend
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
