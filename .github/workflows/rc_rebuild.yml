name: Build and push RC image

on:
  push:
    branches:
      - release-[0-9]+.[0-9]+.[0-9]+*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ''
      RELEASE_BRANCH_NAME: ''
    steps:
      - name: Define release branch name
        run: |
          echo "RELEASE_BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Define version name
        run: |
          semantic_version=${RELEASE_BRANCH_NAME#"release-"}
          echo "VERSION=v${semantic_version}" >> $GITHUB_ENV

      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out Everest frontend
        uses: actions/checkout@v4
        with:
          ref: $ {{ env.RELEASE_BRANCH_NAME }}
          path: percona-everest-frontend
          token: ${{ secrets.ROBOT_TOKEN }}

      - name: Run with Node 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Bit Version Manager
        run: npm i -g @teambit/bvm

      - name: Install latest Bit version
        run: bvm install 0.2.3

      - name: Add bvm bin folder to path
        run: echo "$HOME/bin" >> $GITHUB_PATH

      - name: Set up bit config
        env:
          BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
        run: bit config set user.token $BIT_TOKEN

      - name: Build Everest Frontend app
        run: |
          cd ${GITHUB_WORKSPACE}/percona-everest-frontend
          bit install --recurring-install
          bit snap
          bit artifacts percona.apps/everest --out-dir build
          mkdir ${GITHUB_WORKSPACE}/front
          cp -rf build/percona.apps_everest/react-common-js/everest/public/* ${GITHUB_WORKSPACE}/front/

      - name: Check out Everest Backend
        uses: actions/checkout@v4
        with:
          path: ./backend
          ref: $ {{ env.RELEASE_BRANCH_NAME }}
          token: ${{ secrets.ROBOT_TOKEN }}

      - name: Embed Everest Frontend app into backend
        run: |
          cp -rf ${GITHUB_WORKSPACE}/front/* ${GITHUB_WORKSPACE}/backend/public/dist/
          cd ${GITHUB_WORKSPACE}/backend

      - name: Setup docker build metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: perconalab/everest
          tags: ${{ env.VERSION }}


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push everest RC-image
        uses: docker/build-push-action@v4
        with:
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
