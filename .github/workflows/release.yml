name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: The release version in v*.*.* format
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      RC_BRANCH: ''
    steps:
      - name: Validate input
        run: |
          echo $RC_BRANCH
          if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Wrong version format provided, please use v*.*.* format" 
            exit 1
          fi
      - name: Define release branch name in the format "release-*.*.*"
        run: |
          echo "RC_BRANCH=release-${VERSION#v}" >> $GITHUB_ENV

      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Configure git userdata for commits
        run: | 
          git config --global user.email "everest-ci@percona.com"
          git config --global user.name "Everest RC CI triggered by ${{ github.actor }}"

      - name: Everest CLI - check out
        uses: actions/checkout@v4
        with:
          repository: percona/percona-everest-cli
          ref: ${{ env.RELEASE_BRANCH_NAME }}
          path: percona-everest-cli
          token: ${{ secrets.ROBOT_TOKEN }}

      - name: Everest CLI - create tag
        run: |
          cd percona-everest-cli
          git tag $VERSION
          
          # update image names in scripts. since the branch is created based on the RC-branch,
          # the perconalab/everest:vX.Y.Z image reference is already present in the scripts
          sed -i "s/perconalab\/everest/percona\/percona-everest/g" deploy/quickstart-compose.yml deploy/quickstart-k8s.yaml
          echo "$(git diff deploy/quickstart-compose.yml deploy/quickstart-k8s.yaml)"
          
          # !!! update scripts - tag & registry name
          
          git push origin $VERSION

      - name:  Everest CLI - build binaries
        run: make release

      # !!! conflict with cli push to tags
      - name: Everest CLI - create release with binaries
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Everest catalog - check out
        uses: actions/checkout@v4
        with:
          repository: percona/everest-catalog
          ref: ${{ env.RELEASE_BRANCH_NAME }}
          path: everest-catalog
          token: ${{ secrets.ROBOT_TOKEN }}

      - name: Everest catalog - create tag
        run: |
          cd everest-catalog
          git tag $VERSION
          git push origin $VERSION
      

      - name: Everest frontend - check out
        uses: actions/checkout@v4
        with:
          repository: percona/percona-everest-frontend
          ref: ${{ env.RELEASE_BRANCH_NAME }}
          path: percona-everest-frontend
          token: ${{ secrets.ROBOT_TOKEN }}

      - name: Everest Frontend - create tag
        run: |
          cd percona-everest-frontend
          git tag $VERSION  
          git push origin $VERSION
          
      - name: Everest Frontend - run with Node 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Everest Frontend - install Bit Version Manager
        run: npm i -g @teambit/bvm

      - name: Everest Frontend - install latest Bit version
        run: bvm install 0.2.3

      - name: Everest Frontend - add bvm bin folder to path
        run: echo "$HOME/bin" >> $GITHUB_PATH

      - name: Everest Frontend - set up bit config
        env:
          BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
        run: bit config set user.token $BIT_TOKEN

      - name: Everest Frontend - build app
        run: |
          cd ${GITHUB_WORKSPACE}/percona-everest-frontend
          bit install --recurring-install
          bit snap
          bit artifacts percona.apps/everest --out-dir build
          mkdir ${GITHUB_WORKSPACE}/front
          cp -rf build/percona.apps_everest/react-common-js/everest/public/* ${GITHUB_WORKSPACE}/front/


      - name: Everest Backend - check out
        uses: actions/checkout@v4
        with:
          path: ./backend
          ref: ${{ env.RELEASE_BRANCH_NAME }}

      - name: Everest Backend - create tag
        run: |
          cd backend
          # Check if the branch already exists
          git tag $VERSION  
          
          # update image names in scripts. since the branch is created based on the RC-branch,
          # the perconalab/everest:vX.Y.Z image reference is already present in the scripts
          sed -i "s/perconalab\/everest/percona\/percona-everest/g" deploy/quickstart-compose.yml deploy/quickstart-k8s.yaml
          echo "$(git diff deploy/quickstart-compose.yml deploy/quickstart-k8s.yaml)"
          
          git push origin $VERSION

      - name: Everest Backend - Embed Everest Frontend app into backend
        run: |
          cp -rf ${GITHUB_WORKSPACE}/front/* ${GITHUB_WORKSPACE}/backend/public/dist/
          cd ${GITHUB_WORKSPACE}/backend

      - name: Everest - Setup docker build metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: percona/percona-everest
          tags: ${{ env.VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push everest RC-image
        uses: docker/build-push-action@v5
        with:
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
