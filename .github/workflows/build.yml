name: Build and push dev-latest image

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Check out frontend repo
        uses: actions/checkout@v3
        with:
          repository: percona/percona-everest-frontend
          ref: 'main'
          path: percona-everest-cli
          token: ${{ secrets.ROBOT_TOKEN }}
            #ssh-key: ${{ secrets.FRONTEND_SSH_KEY }}

      - name: Run with Node 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Bit Version Manager
        run: npm i -g @teambit/bvm

      - name: Install latest Bit version
        run: bvm install

      - name: add bvm bin folder to path
        run: echo "$HOME/bin" >> $GITHUB_PATH

      - name: Set up bit config
        env:
          BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
        run: bit config set user.token $BIT_TOKEN

      - name: Build FE app
        run: |
          cd percona-everest-frontend
          bit install
          bit snap
          bit artifacts percona.apps/everest --out-dir build

      - name: Check out
        uses: actions/checkout@v3


      - name: Build image
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: perconalab/everest
          tags: dev-latest

      - name: Embed FE
        run:
          cp -rf ../percona-everest-frontend/build/percona.apps_everest/react-common-js/everest/public/* public/dist/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push operator image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
